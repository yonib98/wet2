#include "HashTable.h"
//int main(){
//    HashTable<int> t1 = HashTable<int>(5);
//    t1.insert(5,5*2);
//    t1.insert(6,6*2);
//    t1.insert(7,7*2);
//    t1.insert(8,8*2);
//    t1.insert(9,18);
//    t1.insert(10,20);
//    t1.remove(7);
//    t1.remove(6);
//
///test of Tsahi and Doron
#include <iostream>
#include <cassert>
using namespace std;

class Player{
private:
    int key;
    int data;
public:
    Player(int key, int data): key(key), data(data) {}
    int getID()
    {
        return key;
    }
    int getData()
    {
        return data;
    }
};
int main()
{
    Player tomb_player(-2,-2);
    HashTable<Player*> table(5);
    ///insert here the tests
    //remove insert,.search, 100 players

    Player player1(32,1019);
    Player player2(41,1180);
    Player player3(89,305);
    Player player4(91,1455);
    Player player5(98,74);
    Player player6(56,260);
    Player player7(58,802);
    Player player8(18,272);
    Player player9(86,473);
    Player player10(44,313);
    Player player11(42,65);
    Player player12(84,566);
    Player player13(80,1111);
    Player player14(8,1191);
    Player player15(82,726);
    Player player16(45,331);
    Player player17(65,1266);
    Player player18(76,1369);
    Player player19(66,1439);
    Player player20(70,927);
    Player player21(77,65);
    Player player22(31,1030);
    Player player23(6,1175);
    Player player24(25,1495);
    Player player25(22,1168);
    Player player26(90,671);
    Player player27(39,1409);
    Player player28(9,1475);
    Player player29(62,633);
    Player player30(53,448);
    Player player31(64,540);
    Player player32(17,689);
    Player player33(95,1428);
    Player player34(49,264);
    Player player35(88,986);
    Player player36(81,1226);
    Player player37(47,3);
    Player player38(29,917);
    Player player39(20,339);
    Player player40(57,351);
    Player player41(10,119);
    Player player42(85,31);
    Player player43(94,221);
    Player player44(7,1458);
    Player player45(26,76);
    Player player46(78,1138);
    Player player47(43,1046);
    Player player48(21,524);
    Player player49(14,1052);
    Player player50(16,87);
    Player player51(37,693);
    Player player52(19,1019);
    Player player53(73,351);
    Player player54(15,560);
    Player player55(55,1468);
    Player player56(35,1477);
    Player player57(34,562);
    Player player58(52,1085);
    Player player59(71,1274);
    Player player60(3,960);
    Player player61(51,1131);
    Player player62(75,435);
    Player player63(38,1104);
    Player player64(4,440);
    Player player65(59,922);
    Player player66(99,287);
    Player player67(50,64);
    Player player68(67,1038);
    Player player69(97,604);
    Player player70(13,18);
    Player player71(83,1249);
    Player player72(60,759);
    Player player73(33,1002);
    Player player74(12,1366);
    Player player75(11,8);
    Player player76(24,1228);
    Player player77(27,181);
    Player player78(72,555);
    Player player79(79,922);
    Player player80(40,1061);
    Player player81(96,748);
    Player player82(93,170);
    Player player83(2,1275);
    Player player84(87,724);
    Player player85(46,1051);
    Player player86(92,1375);
    Player player87(69,1358);
    Player player88(36,1415);
    Player player89(61,1146);
    Player player90(1,945);
    Player player91(23,861);
    Player player92(68,73);
    Player player93(48,297);
    Player player94(54,651);
    Player player95(74,533);
    Player player96(30,91);
    Player player97(63,1289);
    Player player98(5,457);
    Player player99(28,1449);
    assert(table.insert(player39.getID(), &player39)==SUCCESS);
    assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
    assert(table.remove(player74.getID())==NOT_FOUND);
    assert(table.insert(player46.getID(), &player46)==SUCCESS);
    assert(table.remove(player23.getID())==NOT_FOUND);
    assert(table.search(player58.getID())==-1);
    assert(table.search(player8.getID())==-1);
    assert(table.remove(player66.getID())==NOT_FOUND);
    assert(table.remove(player70.getID())==NOT_FOUND);
    assert(table.remove(player71.getID())==NOT_FOUND);
    assert(table.search(player1.getID())==-1);
    assert(table.search(player93.getID())==-1);
    assert(table.insert(player95.getID(), &player95)==SUCCESS);
    assert(table.remove(player61.getID())==NOT_FOUND);
    assert(table.insert(player50.getID(), &player50)==SUCCESS);
    assert(table.insert(player35.getID(), &player35)==SUCCESS);
    assert(table.search(player78.getID())==-1);
    assert(table.remove(player76.getID())==NOT_FOUND);
    assert(table.insert(player61.getID(), &player61)==SUCCESS);
    assert(table.search(player47.getID())==-1);
    assert(table.search(player3.getID())==-1);
    assert(table.insert(player47.getID(), &player47)==SUCCESS);
    assert(table.remove(player42.getID())==NOT_FOUND);
    assert(table.search(player32.getID())==-1);
    assert(table.remove(player79.getID())==NOT_FOUND);
    assert(table.remove(player70.getID())==NOT_FOUND);
    assert(table.remove(player28.getID())==NOT_FOUND);
    assert(table.search(player34.getID())==-1);
    assert(table.remove(player59.getID())==NOT_FOUND);
    assert(table.insert(player87.getID(), &player87)==SUCCESS);
    assert(table.search(player9.getID())==-1);
    assert(table.remove(player52.getID())==NOT_FOUND);
    assert(table.remove(player23.getID())==NOT_FOUND);
    assert(table.remove(player87.getID())==SUCCESS);
    assert(table.insert(player32.getID(), &player32)==SUCCESS);
    assert(table.insert(player43.getID(), &player43)==SUCCESS);
    assert(table.remove(player79.getID())==NOT_FOUND);
    assert(table.insert(player18.getID(), &player18)==SUCCESS);
    assert(table.insert(player87.getID(), &player87)==SUCCESS);
    assert(table.remove(player6.getID())==NOT_FOUND);
    assert(table.insert(player4.getID(), &player4)==SUCCESS);
    assert(table.search(player93.getID())==-1);
    assert(table.insert(player5.getID(), &player5)==SUCCESS);
    assert(table.remove(player55.getID())==NOT_FOUND);
    assert(table.search(player9.getID())==-1);
    assert(table.insert(player67.getID(), &player67)==SUCCESS);
    assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
    assert(table.insert(player38.getID(), &player38)==SUCCESS);
    assert(table.remove(player36.getID())==NOT_FOUND);
    assert(table.search(player66.getID())==-1);
    assert(table.remove(player92.getID())==NOT_FOUND);
    assert(table.search(player63.getID())==-1);
    assert(table.insert(player51.getID(), &player51)==SUCCESS);
    assert(table.search(player9.getID())==-1);
    assert(table.insert(player69.getID(), &player69)==SUCCESS);
    assert(table.search(player20.getID())==-1);
    assert(table.search(player72.getID())==-1);
    assert(table.search(player44.getID())==-1);
    assert(table.insert(player97.getID(), &player97)==SUCCESS);
    assert(table.remove(player6.getID())==NOT_FOUND);
    assert(table.search(player38.getID())!=-1);
    assert(table.insert(player93.getID(), &player93)==SUCCESS);
    assert(table.insert(player35.getID(), &player35)==ALREADY_EXIST);
    assert(table.search(player67.getID())!=-1);
    assert(table.search(player18.getID())!=-1);
    assert(table.remove(player12.getID())==NOT_FOUND);
    assert(table.insert(player45.getID(), &player45)==SUCCESS);
    assert(table.insert(player99.getID(), &player99)==SUCCESS);
    assert(table.insert(player10.getID(), &player10)==SUCCESS);
    assert(table.insert(player79.getID(), &player79)==SUCCESS);
    assert(table.insert(player42.getID(), &player42)==SUCCESS);
    assert(table.search(player1.getID())==-1);
    assert(table.remove(player73.getID())==NOT_FOUND);
    assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
    assert(table.insert(player53.getID(), &player53)==SUCCESS);
    assert(table.remove(player2.getID())==NOT_FOUND);
    assert(table.insert(player73.getID(), &player73)==SUCCESS);
    assert(table.remove(player92.getID())==NOT_FOUND);
    assert(table.search(player81.getID())==-1);
    assert(table.remove(player52.getID())==NOT_FOUND);
    assert(table.search(player71.getID())==-1);
    assert(table.search(player11.getID())==-1);
    assert(table.insert(player59.getID(), &player59)==SUCCESS);
    assert(table.search(player10.getID())!=-1);
    assert(table.search(player8.getID())==-1);
    assert(table.insert(player29.getID(), &player29)==SUCCESS);
    assert(table.insert(player63.getID(), &player63)==SUCCESS);
    assert(table.search(player29.getID())!=-1);
    assert(table.insert(player12.getID(), &player12)==SUCCESS);
    assert(table.insert(player84.getID(), &player84)==SUCCESS);
    assert(table.remove(player55.getID())==NOT_FOUND);
    assert(table.remove(player39.getID())==SUCCESS);
    assert(table.remove(player61.getID())==SUCCESS);
    assert(table.insert(player91.getID(), &player91)==SUCCESS);
    assert(table.insert(player20.getID(), &player20)==SUCCESS);
    assert(table.insert(player98.getID(), &player98)==SUCCESS);
    assert(table.remove(player14.getID())==NOT_FOUND);
    assert(table.insert(player76.getID(), &player76)==SUCCESS);
    assert(table.insert(player86.getID(), &player86)==SUCCESS);
    assert(table.insert(player37.getID(), &player37)==SUCCESS);
    assert(table.remove(player82.getID())==NOT_FOUND);
    assert(table.remove(player97.getID())==SUCCESS);
    assert(table.remove(player75.getID())==NOT_FOUND);
    assert(table.search(player5.getID())!=-1);
    assert(table.remove(player88.getID())==NOT_FOUND);
    assert(table.remove(player12.getID())==SUCCESS);
    assert(table.insert(player28.getID(), &player28)==SUCCESS);
    assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
    assert(table.insert(player17.getID(), &player17)==SUCCESS);
    assert(table.remove(player62.getID())==NOT_FOUND);
    assert(table.remove(player45.getID())==SUCCESS);
    assert(table.remove(player82.getID())==NOT_FOUND);
    assert(table.remove(player79.getID())==SUCCESS);
    assert(table.search(player48.getID())==-1);
    assert(table.insert(player88.getID(), &player88)==SUCCESS);
    assert(table.remove(player93.getID())==SUCCESS);
    assert(table.remove(player5.getID())==SUCCESS);
    assert(table.insert(player89.getID(), &player89)==SUCCESS);
    assert(table.remove(player2.getID())==NOT_FOUND);
    assert(table.insert(player5.getID(), &player5)==SUCCESS);
    assert(table.search(player93.getID())==-1);
    assert(table.remove(player98.getID())==SUCCESS);
    assert(table.search(player68.getID())==-1);
    assert(table.insert(player57.getID(), &player57)==SUCCESS);
    assert(table.remove(player40.getID())==NOT_FOUND);
    assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
    assert(table.remove(player83.getID())==NOT_FOUND);
    assert(table.insert(player34.getID(), &player34)==SUCCESS);
    assert(table.insert(player56.getID(), &player56)==SUCCESS);
    assert(table.search(player91.getID())!=-1);
    assert(table.search(player83.getID())==-1);
    assert(table.remove(player17.getID())==SUCCESS);
    assert(table.insert(player12.getID(), &player12)==SUCCESS);
    assert(table.insert(player82.getID(), &player82)==SUCCESS);
    assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
    assert(table.insert(player79.getID(), &player79)==SUCCESS);
    assert(table.remove(player43.getID())==SUCCESS);
    assert(table.search(player60.getID())==-1);
    assert(table.insert(player2.getID(), &player2)==SUCCESS);
    assert(table.remove(player98.getID())==NOT_FOUND);
    assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
    assert(table.search(player26.getID())==-1);
    assert(table.search(player43.getID())==-1);
    assert(table.insert(player33.getID(), &player33)==SUCCESS);
    assert(table.search(player62.getID())==-1);
    assert(table.search(player15.getID())==-1);
    assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
    assert(table.search(player70.getID())==-1);
    assert(table.remove(player33.getID())==SUCCESS);
    assert(table.insert(player49.getID(), &player49)==SUCCESS);
    assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
    assert(table.remove(player4.getID())==SUCCESS);
    assert(table.insert(player98.getID(), &player98)==SUCCESS);
    assert(table.remove(player93.getID())==NOT_FOUND);
    assert(table.remove(player70.getID())==NOT_FOUND);
    assert(table.remove(player21.getID())==NOT_FOUND);
    assert(table.search(player19.getID())==-1);
    assert(table.insert(player15.getID(), &player15)==SUCCESS);
    assert(table.search(player40.getID())==-1);
    assert(table.insert(player65.getID(), &player65)==SUCCESS);
    assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
    assert(table.search(player88.getID())!=-1);
    assert(table.insert(player82.getID(), &player82)==ALREADY_EXIST);
    assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
    assert(table.insert(player41.getID(), &player41)==SUCCESS);
    assert(table.remove(player34.getID())==SUCCESS);
    assert(table.remove(player68.getID())==NOT_FOUND);
    assert(table.insert(player72.getID(), &player72)==SUCCESS);
    assert(table.search(player62.getID())==-1);
    assert(table.search(player85.getID())==-1);
    assert(table.search(player77.getID())==-1);
    assert(table.insert(player45.getID(), &player45)==SUCCESS);
    assert(table.remove(player99.getID())==SUCCESS);
    assert(table.remove(player11.getID())==NOT_FOUND);
    assert(table.insert(player9.getID(), &player9)==SUCCESS);
    assert(table.remove(player45.getID())==SUCCESS);
    assert(table.remove(player8.getID())==NOT_FOUND);
    assert(table.remove(player44.getID())==NOT_FOUND);
    assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
    assert(table.remove(player30.getID())==NOT_FOUND);
    assert(table.remove(player51.getID())==SUCCESS);
    assert(table.remove(player23.getID())==NOT_FOUND);
    assert(table.remove(player66.getID())==NOT_FOUND);
    assert(table.insert(player83.getID(), &player83)==SUCCESS);
    assert(table.search(player83.getID())!=-1);
    assert(table.insert(player36.getID(), &player36)==SUCCESS);
    assert(table.remove(player17.getID())==NOT_FOUND);
    assert(table.remove(player31.getID())==NOT_FOUND);
    assert(table.search(player45.getID())==-1);
    assert(table.insert(player74.getID(), &player74)==SUCCESS);
    assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
    assert(table.search(player97.getID())==-1);
    assert(table.search(player75.getID())==-1);
    assert(table.search(player55.getID())==-1);
    assert(table.remove(player88.getID())==SUCCESS);
    assert(table.remove(player64.getID())==NOT_FOUND);
    assert(table.insert(player51.getID(), &player51)==SUCCESS);
    assert(table.insert(player24.getID(), &player24)==SUCCESS);
    assert(table.remove(player80.getID())==NOT_FOUND);
    assert(table.remove(player85.getID())==NOT_FOUND);
    assert(table.insert(player1.getID(), &player1)==SUCCESS);
    assert(table.search(player38.getID())!=-1);
    assert(table.insert(player53.getID(), &player53)==ALREADY_EXIST);
    assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
    assert(table.remove(player27.getID())==NOT_FOUND);
    assert(table.search(player90.getID())==-1);
    assert(table.insert(player54.getID(), &player54)==SUCCESS);
    assert(table.remove(player81.getID())==NOT_FOUND);
    assert(table.remove(player95.getID())==SUCCESS);
    assert(table.search(player29.getID())!=-1);
    assert(table.remove(player65.getID())==SUCCESS);
    assert(table.insert(player79.getID(), &player79)==ALREADY_EXIST);
    assert(table.search(player15.getID())!=-1);
    assert(table.remove(player74.getID())==SUCCESS);
    assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
    assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
    assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
    assert(table.remove(player53.getID())==SUCCESS);
    assert(table.insert(player66.getID(), &player66)==SUCCESS);
    assert(table.remove(player44.getID())==NOT_FOUND);
    assert(table.remove(player16.getID())==NOT_FOUND);
    assert(table.remove(player95.getID())==NOT_FOUND);
    assert(table.insert(player78.getID(), &player78)==SUCCESS);
    assert(table.remove(player85.getID())==NOT_FOUND);
    assert(table.remove(player36.getID())==SUCCESS);
    assert(table.search(player2.getID())!=-1);
    assert(table.search(player59.getID())!=-1);
    assert(table.insert(player34.getID(), &player34)==SUCCESS);
    assert(table.search(player6.getID())==-1);
    assert(table.remove(player13.getID())==NOT_FOUND);
    assert(table.search(player64.getID())==-1);
    assert(table.insert(player44.getID(), &player44)==SUCCESS);
    assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
    assert(table.remove(player2.getID())==SUCCESS);
    assert(table.remove(player4.getID())==NOT_FOUND);
    assert(table.remove(player12.getID())==SUCCESS);
    assert(table.search(player77.getID())==-1);
    assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
    assert(table.insert(player13.getID(), &player13)==SUCCESS);
    assert(table.remove(player60.getID())==NOT_FOUND);
    assert(table.search(player30.getID())==-1);
    assert(table.search(player70.getID())==-1);
    assert(table.search(player71.getID())==-1);
    assert(table.search(player40.getID())==-1);
    assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
    assert(table.insert(player65.getID(), &player65)==SUCCESS);
    assert(table.insert(player31.getID(), &player31)==SUCCESS);
    assert(table.search(player15.getID())!=-1);
    assert(table.remove(player72.getID())==SUCCESS);
    assert(table.search(player80.getID())==-1);
    assert(table.remove(player48.getID())==NOT_FOUND);
    assert(table.search(player52.getID())==-1);
    assert(table.search(player39.getID())==-1);
    assert(table.search(player31.getID())!=-1);
    assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
    assert(table.insert(player69.getID(), &player69)==ALREADY_EXIST);
    assert(table.remove(player34.getID())==SUCCESS);
    assert(table.remove(player56.getID())==SUCCESS);
    assert(table.search(player48.getID())==-1);
    assert(table.insert(player39.getID(), &player39)==SUCCESS);
    assert(table.insert(player4.getID(), &player4)==SUCCESS);
    assert(table.search(player29.getID())!=-1);
    assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
    assert(table.insert(player97.getID(), &player97)==SUCCESS);
    assert(table.remove(player42.getID())==SUCCESS);
    assert(table.search(player77.getID())==-1);
    assert(table.search(player5.getID())!=-1);
    assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
    assert(table.insert(player47.getID(), &player47)==ALREADY_EXIST);
    assert(table.search(player93.getID())==-1);
    assert(table.search(player2.getID())==-1);
    assert(table.search(player51.getID())!=-1);
    assert(table.remove(player49.getID())==SUCCESS);
    assert(table.insert(player83.getID(), &player83)==ALREADY_EXIST);
    assert(table.search(player4.getID())!=-1);
    assert(table.search(player8.getID())==-1);
    assert(table.remove(player33.getID())==NOT_FOUND);
    assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
    assert(table.remove(player57.getID())==SUCCESS);
    assert(table.insert(player22.getID(), &player22)==SUCCESS);
    assert(table.remove(player56.getID())==NOT_FOUND);
    assert(table.remove(player79.getID())==SUCCESS);
    assert(table.insert(player1.getID(), &player1)==ALREADY_EXIST);
    assert(table.search(player98.getID())!=-1);
    assert(table.insert(player46.getID(), &player46)==ALREADY_EXIST);
    assert(table.insert(player42.getID(), &player42)==SUCCESS);
    assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
    assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
    assert(table.remove(player96.getID())==NOT_FOUND);
    assert(table.insert(player26.getID(), &player26)==SUCCESS);
    assert(table.insert(player57.getID(), &player57)==SUCCESS);
    assert(table.remove(player85.getID())==NOT_FOUND);
    assert(table.insert(player55.getID(), &player55)==SUCCESS);
    assert(table.remove(player67.getID())==SUCCESS);
    assert(table.search(player6.getID())==-1);
    assert(table.remove(player86.getID())==SUCCESS);
    assert(table.search(player85.getID())==-1);
    assert(table.search(player94.getID())==-1);
    assert(table.search(player30.getID())==-1);
    assert(table.remove(player22.getID())==SUCCESS);
    assert(table.search(player21.getID())==-1);
    assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
    assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
    assert(table.search(player44.getID())!=-1);
    assert(table.search(player16.getID())==-1);
    assert(table.search(player27.getID())==-1);
    assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
    assert(table.search(player27.getID())==-1);
    assert(table.remove(player83.getID())==SUCCESS);
    assert(table.insert(player55.getID(), &player55)==ALREADY_EXIST);
    assert(table.insert(player54.getID(), &player54)==ALREADY_EXIST);
    assert(table.search(player42.getID())!=-1);
    assert(table.insert(player72.getID(), &player72)==SUCCESS);
    assert(table.search(player45.getID())==-1);
    assert(table.remove(player55.getID())==SUCCESS);
    assert(table.insert(player65.getID(), &player65)==ALREADY_EXIST);
    assert(table.insert(player29.getID(), &player29)==ALREADY_EXIST);
    assert(table.search(player13.getID())!=-1);
    assert(table.remove(player93.getID())==NOT_FOUND);
    assert(table.search(player93.getID())==-1);
    assert(table.remove(player28.getID())==SUCCESS);
    assert(table.search(player60.getID())==-1);
    assert(table.insert(player12.getID(), &player12)==SUCCESS);
    assert(table.remove(player99.getID())==NOT_FOUND);
    assert(table.search(player49.getID())==-1);
    assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
    assert(table.search(player21.getID())==-1);
    assert(table.search(player77.getID())==-1);
    assert(table.search(player97.getID())!=-1);
    assert(table.remove(player86.getID())==NOT_FOUND);
    assert(table.search(player63.getID())!=-1);
    assert(table.search(player45.getID())==-1);
    assert(table.remove(player34.getID())==NOT_FOUND);
    assert(table.search(player60.getID())==-1);
    assert(table.search(player6.getID())==-1);
    assert(table.search(player28.getID())==-1);
    assert(table.search(player63.getID())!=-1);
    assert(table.insert(player68.getID(), &player68)==SUCCESS);
    assert(table.search(player85.getID())==-1);
    assert(table.remove(player40.getID())==NOT_FOUND);
    assert(table.remove(player22.getID())==NOT_FOUND);
    assert(table.remove(player30.getID())==NOT_FOUND);
    assert(table.remove(player67.getID())==NOT_FOUND);
    assert(table.insert(player62.getID(), &player62)==SUCCESS);
    assert(table.search(player47.getID())!=-1);
    assert(table.search(player36.getID())==-1);
    assert(table.search(player91.getID())!=-1);
    assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
    assert(table.search(player69.getID())!=-1);
    assert(table.insert(player91.getID(), &player91)==ALREADY_EXIST);
    assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
    assert(table.search(player48.getID())==-1);
    assert(table.insert(player83.getID(), &player83)==SUCCESS);
    assert(table.search(player7.getID())==-1);
    assert(table.remove(player6.getID())==NOT_FOUND);
    assert(table.remove(player88.getID())==NOT_FOUND);
    assert(table.insert(player8.getID(), &player8)==SUCCESS);
    assert(table.search(player62.getID())!=-1);
    assert(table.remove(player75.getID())==NOT_FOUND);
    assert(table.remove(player51.getID())==SUCCESS);
    assert(table.remove(player31.getID())==SUCCESS);
    assert(table.remove(player33.getID())==NOT_FOUND);
    assert(table.search(player44.getID())!=-1);
    assert(table.search(player25.getID())==-1);
    assert(table.insert(player80.getID(), &player80)==SUCCESS);
    assert(table.search(player3.getID())==-1);
    assert(table.search(player93.getID())==-1);
    assert(table.remove(player36.getID())==NOT_FOUND);
    assert(table.remove(player84.getID())==SUCCESS);
    assert(table.remove(player25.getID())==NOT_FOUND);
    assert(table.insert(player11.getID(), &player11)==SUCCESS);
    assert(table.insert(player40.getID(), &player40)==SUCCESS);
    assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
    assert(table.search(player7.getID())==-1);
    assert(table.remove(player33.getID())==NOT_FOUND);
    assert(table.remove(player44.getID())==SUCCESS);
    assert(table.remove(player97.getID())==SUCCESS);
    assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
    assert(table.insert(player7.getID(), &player7)==SUCCESS);
    assert(table.remove(player16.getID())==NOT_FOUND);
    assert(table.remove(player88.getID())==NOT_FOUND);
    assert(table.remove(player35.getID())==SUCCESS);
    assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
    assert(table.search(player11.getID())!=-1);
    assert(table.search(player95.getID())==-1);
    assert(table.remove(player91.getID())==SUCCESS);
    assert(table.remove(player34.getID())==NOT_FOUND);
    assert(table.insert(player55.getID(), &player55)==SUCCESS);
    assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
    assert(table.insert(player17.getID(), &player17)==SUCCESS);
    assert(table.insert(player93.getID(), &player93)==SUCCESS);
    assert(table.search(player20.getID())!=-1);
    assert(table.insert(player22.getID(), &player22)==SUCCESS);
    assert(table.search(player65.getID())!=-1);
    assert(table.remove(player6.getID())==NOT_FOUND);
    assert(table.search(player27.getID())==-1);
    assert(table.search(player87.getID())!=-1);
    assert(table.search(player24.getID())!=-1);
    assert(table.remove(player78.getID())==SUCCESS);
    assert(table.remove(player70.getID())==NOT_FOUND);
    assert(table.remove(player53.getID())==NOT_FOUND);
    assert(table.remove(player45.getID())==NOT_FOUND);
    assert(table.search(player27.getID())==-1);
    assert(table.search(player21.getID())==-1);
    assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
    assert(table.remove(player16.getID())==NOT_FOUND);
    assert(table.insert(player60.getID(), &player60)==SUCCESS);
    assert(table.search(player84.getID())==-1);
    assert(table.search(player13.getID())!=-1);
    assert(table.search(player51.getID())==-1);
    assert(table.search(player6.getID())==-1);
    assert(table.remove(player32.getID())==SUCCESS);
    assert(table.remove(player8.getID())==SUCCESS);
    assert(table.remove(player16.getID())==NOT_FOUND);
    assert(table.search(player16.getID())==-1);
    assert(table.insert(player81.getID(), &player81)==SUCCESS);
    assert(table.search(player29.getID())!=-1);
    assert(table.search(player97.getID())==-1);
    assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
    assert(table.remove(player26.getID())==SUCCESS);
    assert(table.search(player78.getID())==-1);
    assert(table.search(player29.getID())!=-1);
    assert(table.remove(player65.getID())==SUCCESS);
    assert(table.insert(player35.getID(), &player35)==SUCCESS);
    assert(table.search(player48.getID())==-1);
    assert(table.remove(player31.getID())==NOT_FOUND);
    assert(table.search(player52.getID())==-1);
    assert(table.remove(player8.getID())==NOT_FOUND);
    assert(table.remove(player63.getID())==SUCCESS);
    assert(table.search(player25.getID())==-1);
    assert(table.search(player45.getID())==-1);
    assert(table.search(player58.getID())==-1);
    assert(table.insert(player16.getID(), &player16)==SUCCESS);
    assert(table.remove(player41.getID())==SUCCESS);
    assert(table.insert(player37.getID(), &player37)==ALREADY_EXIST);
    assert(table.remove(player27.getID())==NOT_FOUND);
    assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
    assert(table.search(player56.getID())==-1);
    assert(table.insert(player74.getID(), &player74)==SUCCESS);
    assert(table.search(player99.getID())==-1);
    assert(table.insert(player25.getID(), &player25)==SUCCESS);
    assert(table.search(player71.getID())==-1);
    assert(table.remove(player58.getID())==NOT_FOUND);
    assert(table.search(player72.getID())!=-1);
    assert(table.search(player28.getID())==-1);
    assert(table.remove(player1.getID())==SUCCESS);
    assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
    assert(table.insert(player44.getID(), &player44)==SUCCESS);
    assert(table.search(player74.getID())!=-1);
    assert(table.search(player57.getID())!=-1);
    assert(table.remove(player87.getID())==SUCCESS);
    assert(table.remove(player49.getID())==NOT_FOUND);
    assert(table.remove(player40.getID())==SUCCESS);
    assert(table.remove(player54.getID())==SUCCESS);
    assert(table.insert(player53.getID(), &player53)==SUCCESS);
    assert(table.remove(player46.getID())==SUCCESS);
    assert(table.insert(player34.getID(), &player34)==SUCCESS);
    assert(table.insert(player28.getID(), &player28)==SUCCESS);
    assert(table.remove(player63.getID())==NOT_FOUND);
    assert(table.search(player22.getID())!=-1);
    assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
    assert(table.search(player16.getID())!=-1);
    assert(table.search(player68.getID())!=-1);
    assert(table.remove(player10.getID())==SUCCESS);
    assert(table.insert(player61.getID(), &player61)==SUCCESS);
    assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
    assert(table.remove(player93.getID())==SUCCESS);
    assert(table.search(player58.getID())==-1);
    assert(table.insert(player71.getID(), &player71)==SUCCESS);
    assert(table.remove(player4.getID())==SUCCESS);
    assert(table.remove(player18.getID())==SUCCESS);
    assert(table.insert(player28.getID(), &player28)==ALREADY_EXIST);
    assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
    assert(table.insert(player39.getID(), &player39)==ALREADY_EXIST);
    assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
    assert(table.insert(player41.getID(), &player41)==SUCCESS);
    assert(table.search(player46.getID())==-1);
    assert(table.insert(player24.getID(), &player24)==ALREADY_EXIST);
    assert(table.insert(player97.getID(), &player97)==SUCCESS);
    assert(table.insert(player66.getID(), &player66)==ALREADY_EXIST);
    assert(table.search(player39.getID())!=-1);
    assert(table.remove(player96.getID())==NOT_FOUND);
    assert(table.remove(player99.getID())==NOT_FOUND);
    assert(table.search(player97.getID())!=-1);
    assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
    assert(table.remove(player9.getID())==SUCCESS);
    assert(table.search(player39.getID())!=-1);
    assert(table.search(player12.getID())!=-1);
    assert(table.remove(player58.getID())==NOT_FOUND);
    assert(table.insert(player19.getID(), &player19)==SUCCESS);
    assert(table.search(player21.getID())==-1);
    assert(table.remove(player64.getID())==NOT_FOUND);
    assert(table.remove(player43.getID())==NOT_FOUND);
    assert(table.remove(player71.getID())==SUCCESS);
    assert(table.insert(player65.getID(), &player65)==SUCCESS);
    assert(table.insert(player16.getID(), &player16)==ALREADY_EXIST);
    assert(table.insert(player33.getID(), &player33)==SUCCESS);
    assert(table.remove(player44.getID())==SUCCESS);
    assert(table.remove(player32.getID())==NOT_FOUND);
    assert(table.search(player51.getID())==-1);
    assert(table.remove(player70.getID())==NOT_FOUND);
    assert(table.search(player19.getID())!=-1);
    assert(table.remove(player65.getID())==SUCCESS);
    assert(table.insert(player42.getID(), &player42)==ALREADY_EXIST);
    assert(table.search(player55.getID())!=-1);
    assert(table.insert(player56.getID(), &player56)==SUCCESS);
    assert(table.insert(player71.getID(), &player71)==SUCCESS);
    assert(table.search(player54.getID())==-1);
    assert(table.insert(player97.getID(), &player97)==ALREADY_EXIST);
    assert(table.insert(player74.getID(), &player74)==ALREADY_EXIST);
    assert(table.remove(player25.getID())==SUCCESS);
    assert(table.insert(player10.getID(), &player10)==SUCCESS);
    assert(table.search(player59.getID())!=-1);
    assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
    assert(table.search(player91.getID())==-1);
    assert(table.search(player30.getID())==-1);
    assert(table.search(player55.getID())!=-1);
    assert(table.remove(player37.getID())==SUCCESS);
    assert(table.search(player13.getID())!=-1);
    assert(table.search(player61.getID())!=-1);
    assert(table.insert(player75.getID(), &player75)==SUCCESS);
    assert(table.insert(player45.getID(), &player45)==SUCCESS);
    assert(table.search(player56.getID())!=-1);
    assert(table.remove(player34.getID())==SUCCESS);
    assert(table.search(player18.getID())==-1);
    assert(table.search(player98.getID())!=-1);
    assert(table.search(player30.getID())==-1);
    assert(table.search(player13.getID())!=-1);
    assert(table.search(player30.getID())==-1);
    assert(table.search(player5.getID())!=-1);
    assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
    assert(table.search(player46.getID())==-1);
    assert(table.insert(player95.getID(), &player95)==SUCCESS);
    assert(table.insert(player86.getID(), &player86)==SUCCESS);
    assert(table.search(player72.getID())!=-1);
    assert(table.remove(player33.getID())==SUCCESS);
    assert(table.remove(player35.getID())==SUCCESS);
    assert(table.remove(player12.getID())==SUCCESS);
    assert(table.search(player7.getID())!=-1);
    assert(table.remove(player41.getID())==SUCCESS);
    assert(table.remove(player85.getID())==NOT_FOUND);
    assert(table.search(player37.getID())==-1);
    assert(table.search(player98.getID())!=-1);
    assert(table.search(player96.getID())==-1);
    assert(table.remove(player81.getID())==SUCCESS);
    assert(table.search(player10.getID())!=-1);
    assert(table.remove(player53.getID())==SUCCESS);
    assert(table.insert(player44.getID(), &player44)==SUCCESS);
    assert(table.search(player45.getID())!=-1);
    assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
    assert(table.remove(player75.getID())==SUCCESS);
    assert(table.insert(player37.getID(), &player37)==SUCCESS);
    assert(table.search(player36.getID())==-1);
    assert(table.search(player45.getID())!=-1);
    assert(table.remove(player1.getID())==NOT_FOUND);
    assert(table.search(player17.getID())!=-1);
    assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
    assert(table.search(player79.getID())==-1);
    assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
    assert(table.remove(player66.getID())==SUCCESS);
    assert(table.search(player40.getID())==-1);
    assert(table.search(player77.getID())==-1);
    assert(table.search(player21.getID())==-1);
    assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
    assert(table.search(player27.getID())==-1);
    assert(table.remove(player6.getID())==NOT_FOUND);
    assert(table.search(player46.getID())==-1);
    assert(table.insert(player10.getID(), &player10)==ALREADY_EXIST);
    assert(table.insert(player92.getID(), &player92)==SUCCESS);
    assert(table.search(player91.getID())==-1);
    assert(table.insert(player4.getID(), &player4)==SUCCESS);
    assert(table.insert(player70.getID(), &player70)==SUCCESS);
    assert(table.insert(player33.getID(), &player33)==SUCCESS);
    assert(table.remove(player19.getID())==SUCCESS);
    assert(table.remove(player28.getID())==SUCCESS);
    assert(table.search(player85.getID())==-1);
    assert(table.search(player78.getID())==-1);
    assert(table.remove(player42.getID())==SUCCESS);
    assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
    assert(table.insert(player41.getID(), &player41)==SUCCESS);
    assert(table.search(player65.getID())==-1);
    assert(table.insert(player90.getID(), &player90)==SUCCESS);
    assert(table.insert(player40.getID(), &player40)==SUCCESS);
    assert(table.search(player44.getID())!=-1);
    assert(table.search(player34.getID())==-1);
    assert(table.search(player65.getID())==-1);
    assert(table.insert(player50.getID(), &player50)==ALREADY_EXIST);
    assert(table.remove(player39.getID())==SUCCESS);
    assert(table.remove(player83.getID())==SUCCESS);
    assert(table.insert(player4.getID(), &player4)==ALREADY_EXIST);
    assert(table.remove(player31.getID())==NOT_FOUND);
    assert(table.search(player80.getID())!=-1);
    assert(table.search(player9.getID())==-1);
    assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
    assert(table.insert(player30.getID(), &player30)==SUCCESS);
    assert(table.remove(player84.getID())==NOT_FOUND);
    assert(table.insert(player38.getID(), &player38)==ALREADY_EXIST);
    assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
    assert(table.remove(player51.getID())==NOT_FOUND);
    assert(table.search(player78.getID())==-1);
    assert(table.remove(player57.getID())==SUCCESS);
    assert(table.remove(player13.getID())==SUCCESS);
    assert(table.insert(player17.getID(), &player17)==ALREADY_EXIST);
    assert(table.remove(player34.getID())==NOT_FOUND);
    assert(table.insert(player66.getID(), &player66)==SUCCESS);
    assert(table.search(player23.getID())==-1);
    assert(table.search(player33.getID())!=-1);
    assert(table.search(player70.getID())!=-1);
    assert(table.remove(player84.getID())==NOT_FOUND);
    assert(table.insert(player68.getID(), &player68)==ALREADY_EXIST);
    assert(table.remove(player50.getID())==SUCCESS);
    assert(table.search(player86.getID())!=-1);
    assert(table.insert(player83.getID(), &player83)==SUCCESS);
    assert(table.search(player19.getID())==-1);
    assert(table.search(player67.getID())==-1);
    assert(table.insert(player67.getID(), &player67)==SUCCESS);
    assert(table.search(player84.getID())==-1);
    assert(table.remove(player66.getID())==SUCCESS);
    assert(table.search(player2.getID())==-1);
    assert(table.remove(player3.getID())==NOT_FOUND);
    assert(table.remove(player25.getID())==NOT_FOUND);
    assert(table.remove(player31.getID())==NOT_FOUND);
    assert(table.remove(player72.getID())==SUCCESS);
    assert(table.insert(player31.getID(), &player31)==SUCCESS);
    assert(table.remove(player97.getID())==SUCCESS);
    assert(table.insert(player99.getID(), &player99)==SUCCESS);
    assert(table.search(player58.getID())==-1);
    assert(table.remove(player83.getID())==SUCCESS);
    assert(table.insert(player21.getID(), &player21)==SUCCESS);
    assert(table.remove(player52.getID())==NOT_FOUND);
    assert(table.remove(player77.getID())==NOT_FOUND);
    assert(table.search(player89.getID())!=-1);
    assert(table.search(player21.getID())!=-1);
    assert(table.insert(player95.getID(), &player95)==ALREADY_EXIST);
    assert(table.search(player20.getID())!=-1);
    assert(table.remove(player28.getID())==NOT_FOUND);
    assert(table.search(player79.getID())==-1);
    assert(table.search(player85.getID())==-1);
    assert(table.insert(player63.getID(), &player63)==SUCCESS);
    assert(table.remove(player88.getID())==NOT_FOUND);
    assert(table.remove(player3.getID())==NOT_FOUND);
    assert(table.search(player81.getID())==-1);
    assert(table.search(player58.getID())==-1);
    assert(table.search(player65.getID())==-1);
    assert(table.insert(player1.getID(), &player1)==SUCCESS);
    assert(table.search(player58.getID())==-1);
    assert(table.search(player89.getID())!=-1);
    assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
    assert(table.insert(player3.getID(), &player3)==SUCCESS);
    assert(table.remove(player4.getID())==SUCCESS);
    assert(table.remove(player84.getID())==NOT_FOUND);
    assert(table.remove(player52.getID())==NOT_FOUND);
    assert(table.remove(player24.getID())==SUCCESS);
    assert(table.remove(player57.getID())==NOT_FOUND);
    assert(table.search(player84.getID())==-1);
    assert(table.search(player54.getID())==-1);
    assert(table.search(player83.getID())==-1);
    assert(table.insert(player35.getID(), &player35)==SUCCESS);
    assert(table.search(player39.getID())==-1);
    assert(table.search(player87.getID())==-1);
    assert(table.search(player97.getID())==-1);
    assert(table.insert(player6.getID(), &player6)==SUCCESS);
    assert(table.insert(player73.getID(), &player73)==ALREADY_EXIST);
    assert(table.remove(player64.getID())==NOT_FOUND);
    assert(table.remove(player93.getID())==NOT_FOUND);
    assert(table.remove(player42.getID())==NOT_FOUND);
    assert(table.insert(player81.getID(), &player81)==SUCCESS);
    assert(table.insert(player59.getID(), &player59)==ALREADY_EXIST);
    assert(table.remove(player59.getID())==SUCCESS);
    assert(table.search(player50.getID())==-1);
    assert(table.search(player47.getID())!=-1);
    assert(table.search(player46.getID())==-1);
    assert(table.search(player77.getID())==-1);
    assert(table.remove(player19.getID())==NOT_FOUND);
    assert(table.remove(player81.getID())==SUCCESS);
    assert(table.remove(player32.getID())==NOT_FOUND);
    assert(table.remove(player72.getID())==NOT_FOUND);
    assert(table.search(player35.getID())!=-1);
    assert(table.search(player95.getID())!=-1);
    assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
    assert(table.insert(player85.getID(), &player85)==SUCCESS);
    assert(table.search(player95.getID())!=-1);
    assert(table.remove(player6.getID())==SUCCESS);
    assert(table.search(player10.getID())!=-1);
    assert(table.remove(player56.getID())==SUCCESS);
    assert(table.search(player17.getID())!=-1);
    assert(table.remove(player55.getID())==SUCCESS);
    assert(table.remove(player81.getID())==NOT_FOUND);
    assert(table.remove(player1.getID())==SUCCESS);
    assert(table.remove(player95.getID())==SUCCESS);
    assert(table.remove(player84.getID())==NOT_FOUND);
    assert(table.remove(player53.getID())==NOT_FOUND);
    assert(table.remove(player38.getID())==SUCCESS);
    assert(table.insert(player51.getID(), &player51)==SUCCESS);
    assert(table.insert(player15.getID(), &player15)==ALREADY_EXIST);
    assert(table.insert(player85.getID(), &player85)==ALREADY_EXIST);
    assert(table.remove(player19.getID())==NOT_FOUND);
    assert(table.insert(player12.getID(), &player12)==SUCCESS);
    assert(table.remove(player91.getID())==NOT_FOUND);
    assert(table.search(player16.getID())!=-1);
    assert(table.search(player28.getID())==-1);
    assert(table.remove(player86.getID())==SUCCESS);
    assert(table.remove(player30.getID())==SUCCESS);
    assert(table.search(player37.getID())!=-1);
    assert(table.remove(player74.getID())==SUCCESS);
    assert(table.remove(player8.getID())==NOT_FOUND);
    assert(table.search(player25.getID())==-1);
    assert(table.search(player55.getID())==-1);
    assert(table.remove(player74.getID())==NOT_FOUND);
    assert(table.search(player68.getID())!=-1);
    assert(table.remove(player67.getID())==SUCCESS);
    assert(table.remove(player84.getID())==NOT_FOUND);
    assert(table.search(player33.getID())!=-1);
    assert(table.search(player21.getID())!=-1);
    assert(table.remove(player19.getID())==NOT_FOUND);
    assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
    assert(table.insert(player81.getID(), &player81)==SUCCESS);
    assert(table.remove(player77.getID())==NOT_FOUND);
    assert(table.search(player52.getID())==-1);
    assert(table.search(player53.getID())==-1);
    assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
    assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
    assert(table.remove(player3.getID())==SUCCESS);
    assert(table.search(player81.getID())!=-1);
    assert(table.search(player90.getID())!=-1);
    assert(table.remove(player28.getID())==NOT_FOUND);
    assert(table.remove(player38.getID())==NOT_FOUND);
    assert(table.search(player18.getID())==-1);
    assert(table.insert(player18.getID(), &player18)==SUCCESS);
    assert(table.remove(player3.getID())==NOT_FOUND);
    assert(table.remove(player29.getID())==SUCCESS);
    assert(table.remove(player62.getID())==SUCCESS);
    assert(table.insert(player28.getID(), &player28)==SUCCESS);
    assert(table.search(player36.getID())==-1);
    assert(table.remove(player43.getID())==NOT_FOUND);
    assert(table.insert(player38.getID(), &player38)==SUCCESS);
    assert(table.remove(player13.getID())==NOT_FOUND);
    assert(table.remove(player20.getID())==SUCCESS);
    assert(table.search(player11.getID())!=-1);
    assert(table.search(player63.getID())!=-1);
    assert(table.insert(player25.getID(), &player25)==SUCCESS);
    assert(table.search(player28.getID())!=-1);
    assert(table.search(player15.getID())!=-1);
    assert(table.insert(player65.getID(), &player65)==SUCCESS);
    assert(table.search(player9.getID())==-1);
    assert(table.insert(player67.getID(), &player67)==SUCCESS);
    assert(table.remove(player88.getID())==NOT_FOUND);
    assert(table.remove(player16.getID())==SUCCESS);
    assert(table.remove(player11.getID())==SUCCESS);
    assert(table.insert(player89.getID(), &player89)==ALREADY_EXIST);
    assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
    assert(table.search(player89.getID())!=-1);
    assert(table.insert(player57.getID(), &player57)==SUCCESS);
    assert(table.search(player51.getID())!=-1);
    assert(table.insert(player12.getID(), &player12)==ALREADY_EXIST);
    assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
    assert(table.insert(player99.getID(), &player99)==ALREADY_EXIST);
    assert(table.insert(player57.getID(), &player57)==ALREADY_EXIST);
    assert(table.remove(player71.getID())==SUCCESS);
    assert(table.search(player44.getID())!=-1);
    assert(table.insert(player51.getID(), &player51)==ALREADY_EXIST);
    assert(table.search(player98.getID())!=-1);
    assert(table.remove(player17.getID())==SUCCESS);
    assert(table.remove(player44.getID())==SUCCESS);
    assert(table.search(player63.getID())!=-1);
    assert(table.insert(player32.getID(), &player32)==SUCCESS);
    assert(table.insert(player67.getID(), &player67)==ALREADY_EXIST);
    assert(table.search(player11.getID())==-1);
    assert(table.search(player24.getID())==-1);
    assert(table.insert(player95.getID(), &player95)==SUCCESS);
    assert(table.insert(player76.getID(), &player76)==ALREADY_EXIST);
    assert(table.remove(player76.getID())==SUCCESS);
    assert(table.insert(player98.getID(), &player98)==ALREADY_EXIST);
    assert(table.insert(player14.getID(), &player14)==SUCCESS);
    assert(table.insert(player6.getID(), &player6)==SUCCESS);
    assert(table.remove(player62.getID())==NOT_FOUND);
    assert(table.insert(player49.getID(), &player49)==SUCCESS);
    assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
    assert(table.search(player85.getID())!=-1);
    assert(table.remove(player73.getID())==SUCCESS);
    assert(table.search(player4.getID())==-1);
    assert(table.search(player53.getID())==-1);
    assert(table.insert(player52.getID(), &player52)==SUCCESS);
    assert(table.search(player87.getID())==-1);
    assert(table.insert(player76.getID(), &player76)==SUCCESS);
    assert(table.search(player54.getID())==-1);
    assert(table.remove(player6.getID())==SUCCESS);
    assert(table.search(player65.getID())!=-1);
    assert(table.remove(player77.getID())==NOT_FOUND);
    assert(table.insert(player34.getID(), &player34)==SUCCESS);
    assert(table.search(player44.getID())==-1);
    assert(table.remove(player75.getID())==NOT_FOUND);
    assert(table.insert(player93.getID(), &player93)==SUCCESS);
    assert(table.insert(player4.getID(), &player4)==SUCCESS);
    assert(table.search(player13.getID())==-1);
    assert(table.insert(player7.getID(), &player7)==ALREADY_EXIST);
    assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
    assert(table.insert(player25.getID(), &player25)==ALREADY_EXIST);
    assert(table.remove(player8.getID())==NOT_FOUND);
    assert(table.insert(player14.getID(), &player14)==ALREADY_EXIST);
    assert(table.search(player96.getID())==-1);
    assert(table.search(player38.getID())!=-1);
    assert(table.remove(player44.getID())==NOT_FOUND);
    assert(table.search(player28.getID())!=-1);
    assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
    assert(table.insert(player86.getID(), &player86)==SUCCESS);
    assert(table.remove(player53.getID())==NOT_FOUND);
    assert(table.remove(player54.getID())==NOT_FOUND);
    assert(table.search(player87.getID())==-1);
    assert(table.remove(player9.getID())==NOT_FOUND);
    assert(table.remove(player50.getID())==NOT_FOUND);
    assert(table.search(player29.getID())==-1);
    assert(table.search(player68.getID())!=-1);
    assert(table.insert(player72.getID(), &player72)==SUCCESS);
    assert(table.insert(player84.getID(), &player84)==SUCCESS);
    assert(table.remove(player6.getID())==NOT_FOUND);
    assert(table.remove(player9.getID())==NOT_FOUND);
    assert(table.insert(player17.getID(), &player17)==SUCCESS);
    assert(table.remove(player27.getID())==NOT_FOUND);
    assert(table.search(player64.getID())==-1);
    assert(table.remove(player59.getID())==NOT_FOUND);
    assert(table.remove(player29.getID())==NOT_FOUND);
    assert(table.search(player36.getID())==-1);
    assert(table.insert(player33.getID(), &player33)==ALREADY_EXIST);
    assert(table.remove(player49.getID())==SUCCESS);
    assert(table.insert(player44.getID(), &player44)==SUCCESS);
    assert(table.remove(player25.getID())==SUCCESS);
    assert(table.remove(player95.getID())==SUCCESS);
    assert(table.insert(player31.getID(), &player31)==ALREADY_EXIST);
    assert(table.insert(player26.getID(), &player26)==SUCCESS);
    assert(table.search(player96.getID())==-1);
    assert(table.insert(player79.getID(), &player79)==SUCCESS);
    assert(table.remove(player50.getID())==NOT_FOUND);
    assert(table.search(player23.getID())==-1);
    assert(table.search(player41.getID())!=-1);
    assert(table.insert(player21.getID(), &player21)==ALREADY_EXIST);
    assert(table.search(player41.getID())!=-1);
    assert(table.insert(player94.getID(), &player94)==SUCCESS);
    assert(table.insert(player78.getID(), &player78)==SUCCESS);
    assert(table.insert(player13.getID(), &player13)==SUCCESS);
    assert(table.remove(player59.getID())==NOT_FOUND);
    assert(table.search(player14.getID())!=-1);
    assert(table.insert(player55.getID(), &player55)==SUCCESS);
    assert(table.remove(player37.getID())==SUCCESS);
    assert(table.insert(player88.getID(), &player88)==SUCCESS);
    assert(table.search(player17.getID())!=-1);
    assert(table.insert(player62.getID(), &player62)==SUCCESS);
    assert(table.insert(player59.getID(), &player59)==SUCCESS);
    assert(table.insert(player39.getID(), &player39)==SUCCESS);
    assert(table.search(player2.getID())==-1);
    assert(table.remove(player82.getID())==SUCCESS);
    assert(table.remove(player90.getID())==SUCCESS);
    assert(table.search(player63.getID())!=-1);
    assert(table.search(player4.getID())!=-1);
    assert(table.remove(player9.getID())==NOT_FOUND);
    assert(table.search(player67.getID())!=-1);
    assert(table.insert(player56.getID(), &player56)==SUCCESS);
    assert(table.insert(player78.getID(), &player78)==ALREADY_EXIST);
    assert(table.insert(player63.getID(), &player63)==ALREADY_EXIST);
    assert(table.remove(player4.getID())==SUCCESS);
    assert(table.insert(player9.getID(), &player9)==SUCCESS);
    assert(table.remove(player21.getID())==SUCCESS);
    assert(table.insert(player43.getID(), &player43)==SUCCESS);
    assert(table.search(player79.getID())!=-1);
    assert(table.search(player11.getID())==-1);
    assert(table.insert(player58.getID(), &player58)==SUCCESS);
    assert(table.search(player50.getID())==-1);
    assert(table.insert(player56.getID(), &player56)==ALREADY_EXIST);
    assert(table.search(player16.getID())==-1);
    assert(table.remove(player10.getID())==SUCCESS);
    assert(table.remove(player95.getID())==NOT_FOUND);
    assert(table.insert(player48.getID(), &player48)==SUCCESS);
    assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
    assert(table.insert(player58.getID(), &player58)==ALREADY_EXIST);
    assert(table.insert(player18.getID(), &player18)==ALREADY_EXIST);
    assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
    assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
    assert(table.search(player36.getID())==-1);
    assert(table.remove(player13.getID())==SUCCESS);
    assert(table.remove(player83.getID())==NOT_FOUND);
    assert(table.search(player7.getID())!=-1);
    assert(table.search(player77.getID())==-1);
    assert(table.remove(player25.getID())==NOT_FOUND);
    assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
    assert(table.remove(player20.getID())==NOT_FOUND);
    assert(table.remove(player60.getID())==SUCCESS);
    assert(table.remove(player46.getID())==NOT_FOUND);
    assert(table.insert(player82.getID(), &player82)==SUCCESS);
    assert(table.remove(player43.getID())==SUCCESS);
    assert(table.remove(player87.getID())==NOT_FOUND);
    assert(table.insert(player61.getID(), &player61)==ALREADY_EXIST);
    assert(table.remove(player12.getID())==SUCCESS);
    assert(table.remove(player39.getID())==SUCCESS);
    assert(table.insert(player1.getID(), &player1)==SUCCESS);
    assert(table.remove(player97.getID())==NOT_FOUND);
    assert(table.remove(player26.getID())==SUCCESS);
    assert(table.remove(player61.getID())==SUCCESS);
    assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
    assert(table.remove(player57.getID())==SUCCESS);
    assert(table.search(player94.getID())!=-1);
    assert(table.remove(player60.getID())==NOT_FOUND);
    assert(table.remove(player57.getID())==NOT_FOUND);
    assert(table.insert(player30.getID(), &player30)==SUCCESS);
    assert(table.remove(player76.getID())==SUCCESS);
    assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
    assert(table.remove(player37.getID())==NOT_FOUND);
    assert(table.remove(player75.getID())==NOT_FOUND);
    assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
    assert(table.insert(player73.getID(), &player73)==SUCCESS);
    assert(table.remove(player4.getID())==NOT_FOUND);
    assert(table.insert(player75.getID(), &player75)==SUCCESS);
    assert(table.insert(player96.getID(), &player96)==SUCCESS);
    assert(table.insert(player92.getID(), &player92)==ALREADY_EXIST);
    assert(table.insert(player49.getID(), &player49)==SUCCESS);
    assert(table.remove(player13.getID())==NOT_FOUND);
    assert(table.insert(player41.getID(), &player41)==ALREADY_EXIST);
    assert(table.insert(player53.getID(), &player53)==SUCCESS);
    assert(table.search(player22.getID())!=-1);
    assert(table.remove(player55.getID())==SUCCESS);
    assert(table.search(player48.getID())!=-1);
    assert(table.remove(player32.getID())==SUCCESS);
    assert(table.search(player61.getID())==-1);
    assert(table.remove(player48.getID())==SUCCESS);
    assert(table.insert(player32.getID(), &player32)==SUCCESS);
    assert(table.remove(player78.getID())==SUCCESS);
    assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
    assert(table.search(player59.getID())!=-1);
    assert(table.remove(player71.getID())==NOT_FOUND);
    assert(table.remove(player54.getID())==NOT_FOUND);
    assert(table.search(player28.getID())!=-1);
    assert(table.search(player39.getID())==-1);
    assert(table.insert(player46.getID(), &player46)==SUCCESS);
    assert(table.remove(player60.getID())==NOT_FOUND);
    assert(table.search(player64.getID())==-1);
    assert(table.search(player25.getID())==-1);
    assert(table.insert(player87.getID(), &player87)==SUCCESS);
    assert(table.remove(player97.getID())==NOT_FOUND);
    assert(table.remove(player78.getID())==NOT_FOUND);
    assert(table.remove(player57.getID())==NOT_FOUND);
    assert(table.remove(player56.getID())==SUCCESS);
    assert(table.insert(player27.getID(), &player27)==SUCCESS);
    assert(table.remove(player99.getID())==SUCCESS);
    assert(table.search(player69.getID())!=-1);
    assert(table.insert(player84.getID(), &player84)==ALREADY_EXIST);
    assert(table.insert(player9.getID(), &player9)==ALREADY_EXIST);
    assert(table.insert(player86.getID(), &player86)==ALREADY_EXIST);
    assert(table.insert(player4.getID(), &player4)==SUCCESS);
    assert(table.search(player89.getID())!=-1);
    assert(table.remove(player25.getID())==NOT_FOUND);
    assert(table.insert(player45.getID(), &player45)==ALREADY_EXIST);
    assert(table.search(player88.getID())!=-1);
    assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
    assert(table.insert(player81.getID(), &player81)==ALREADY_EXIST);
    assert(table.search(player67.getID())!=-1);
    assert(table.remove(player14.getID())==SUCCESS);
    assert(table.insert(player13.getID(), &player13)==SUCCESS);
    assert(table.remove(player94.getID())==SUCCESS);
    assert(table.insert(player12.getID(), &player12)==SUCCESS);
    assert(table.remove(player61.getID())==NOT_FOUND);
    assert(table.remove(player39.getID())==NOT_FOUND);
    assert(table.insert(player22.getID(), &player22)==ALREADY_EXIST);
    assert(table.search(player6.getID())==-1);
    assert(table.remove(player89.getID())==SUCCESS);
    assert(table.insert(player25.getID(), &player25)==SUCCESS);
    assert(table.remove(player4.getID())==SUCCESS);
    assert(table.remove(player20.getID())==NOT_FOUND);
    assert(table.search(player47.getID())!=-1);
    assert(table.insert(player14.getID(), &player14)==SUCCESS);
    assert(table.remove(player54.getID())==NOT_FOUND);
    assert(table.search(player36.getID())==-1);
    assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
    assert(table.insert(player72.getID(), &player72)==ALREADY_EXIST);
    assert(table.remove(player89.getID())==NOT_FOUND);
    assert(table.search(player46.getID())!=-1);
    assert(table.insert(player43.getID(), &player43)==SUCCESS);
    assert(table.insert(player43.getID(), &player43)==ALREADY_EXIST);
    assert(table.remove(player1.getID())==SUCCESS);
    assert(table.remove(player35.getID())==SUCCESS);
    assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);
    assert(table.insert(player5.getID(), &player5)==ALREADY_EXIST);
    assert(table.remove(player12.getID())==SUCCESS);
    assert(table.search(player95.getID())==-1);
    assert(table.insert(player36.getID(), &player36)==SUCCESS);
    assert(table.search(player5.getID())!=-1);
    assert(table.search(player71.getID())==-1);
    assert(table.insert(player57.getID(), &player57)==SUCCESS);
    assert(table.search(player33.getID())!=-1);
    assert(table.search(player8.getID())==-1);
    assert(table.insert(player13.getID(), &player13)==ALREADY_EXIST);
    assert(table.remove(player18.getID())==SUCCESS);
    assert(table.remove(player79.getID())==SUCCESS);
    assert(table.search(player7.getID())!=-1);
    assert(table.search(player79.getID())==-1);
    assert(table.remove(player7.getID())==SUCCESS);
    assert(table.remove(player24.getID())==NOT_FOUND);
    assert(table.insert(player11.getID(), &player11)==SUCCESS);
    assert(table.insert(player40.getID(), &player40)==ALREADY_EXIST);
    assert(table.insert(player29.getID(), &player29)==SUCCESS);
    assert(table.insert(player80.getID(), &player80)==ALREADY_EXIST);

    return 0;
}
